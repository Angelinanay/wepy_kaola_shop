<style lang="less">
  @import '../../common/common.less';

  .scan_container {
    display: flex;
    flex-direction: column;
    justify-content: space-between;
    height: 100%;

    .wrapper {
      display: flex;
      flex-direction: column;
      align-items: center;
      border-top: 1px solid transparent;
      background: #fff;
      height: 865rpx;

      .scan_btn {
        background: rgba(0, 255, 0, 0.6);
        color: #fff;
        width: 530rpx;
        height: 100rpx;
        border-radius: 50rpx;
        border: none;
        margin-top: 80rpx;
      }

      .scan_img {
        width: 400rpx;
        height: 400rpx;
        margin-top: 80rpx;
      }
    }
  }
</style>

<template>
  <view class="scan_container">
    <entry></entry>
    <view class="wrapper">
      <image class="scan_img" src="../../images/qr_image.png" />
      <button @tap="scan" class="scan_btn">
        <text class="">扫一扫</text>
        <text>货架二维码</text>
      </button>
    </view>
    <toast :text.sync="text" :isShow.sync="isShow"></toast>
  </view>
</template>

<script>
  import wepy from 'wepy'
  import Entry from './entry'
  import Toast from '../../components/toast'

  export default class Scan extends wepy.page {
    config = {
      navigationBarTitleText: '办公室货架'
    }

    components = {
      entry: Entry,
      toast: Toast
    }

    data = {
      text: '我现在不想卖东西给你',
      isShow: false
    }

    computed = {
    }

    methods = {
      scan() {
        const self = this
        wepy.scanCode({
          scanType: ['qrCode'],
          success(...res) {
            console.log(res)
            self.text = '我现在不想卖东西给你~~'
            self.isShow = true
            self.$apply()
            setTimeout(() => {
              self.isShow = false
              self.$apply()
            }, 2000)
          },
          fail() {
            // 请从便利店后加上
            self.text = '请从便利店货架上扫描二维码~~'
            self.isShow = true
            self.$apply()
            setTimeout(() => {
              self.isShow = false
              self.$apply()
            }, 2000)
          }
        })
      }
    }

    events = {
    }

    onLoad() {
      wepy.showLoading({
        mask: true
      })
      /**
       * TODO: fetch data(也许不应该放到onLoad中，如果每次进入页面都需要抓取数据)
       */
      setTimeout(() => {
        wepy.hideLoading()
      }, 1000 * Math.random())
    }
  }
</script>
